# change aws region
awsregion() {
    export AWS_REGION=$1
    export AWS_DEFAULT_REGION=$1
    export AWS_PROFILE=faria
}

# kill zombies process
killzombies() {
  pids=$(ps -A -ostat,ppid | awk '/[zZ]/ && !a[$2]++ {print $2}');

  if [ -z "$pids" ]; then
    echo "No zombie processes found.";
  else
    echo "Found zombie processes with PID: $pids";
    echo "$cmd";
    echo "Kill it? Return to continueâ€¦ (ctrl+c to cancel)";
    read -r;
    kill $pids;
  fi
}

# Confirm
# confirm && curl ... || exit 0;
# confirm "message .. [Y/n]" && curl ... || exit 0;
confirm() {
  read -r -p "${1:-Are you sure? [y/N]} " response
  case "$response" in
  [yY][eE][sS] | [yY])
    true
    ;;
  *)
    false
    ;;
  esac
}

# quick function to read .env file
# use it via:
# source readenv
# readenv
#
# or
#
# readenv <filename>
# NOT a standalone script as when used as a standalone script, it'll read in the ENV variables into a sub-process, not the
# calling process
readenv() {
  local filePath="${1:-.env}"

  if [ ! -f "$filePath" ]; then
    # silently be done
    # put some error / echo if you prefer non-silent errors
    return 0
  fi

#  echo "Reading $filePath"
  while read -r line; do
    if [[ "$line" =~ ^\s*#.*$ || -z "$line" ]]; then
      continue
    fi

     # Split the line into key and value. Trim whitespace on either side.
    key=$(echo "$line" | cut -d '=' -f 1 | sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//')
    value=$(echo "$line" | cut -d '=' -f 2- | sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//')

    # Leaving the below here... normally this works, but if you have something like
    # FOO="  string with leading and trailing  "
    # then the leading / trailing spaces are deleted. FOO="a word", FOO='a word', and FOO=a word all generally work
    # so leave the quotes
    # Remove single quotes, double quotes, and leading/trailing spaces from the value
    # value=$(echo "$value" | sed -e "s/^'//" -e "s/'$//" -e 's/^"//' -e 's/"$//' -e 's/^[[:space:]]*//;s/[[:space:]]*$//')

    # Export the key and value as environment variables
    # echo "$key=$value"
    export "$key=$value"

  done < "$filePath"
}
