---
# ---------------------------------------------------------------------------------------------
# --  Initialize
# ---------------------------------------------------------------------------------------------
- defaults:
    link:
      relink: true
      create: true
    shell:
      stderr: true

- clean:
    ~/:
      force: true
    ~/.config:
      recursive: true

# ---------------------------------------------------------------------------------------------
# --  Setup
# ---------------------------------------------------------------------------------------------
- shell:
    - [ "git submodule update --init --recursive",                             Installing/Updating submodules ]
    - [ "mkdir -p $HOME/{.config,.cache,.local/{share,state,bin}}",            Creating XDG_* directories ]
    - [ "mkdir -p $HOME/{tmp,Projects}",                                       Creating default directories ]
    - [ "mkdir -p $HOME/.ssh/control; chmod 700 $HOME/.ssh",                   Creating ssh directory ]
    - [ "mkdir -p $HOME/.ssl/{certs,private}; chmod 700 $HOME/.ssl",           Creating ssl directory ]
    #- ["test -L ~/src || ln -s ~/Repos ~/src",                                Symlink repos]

# ---------------------------------------------------------------------------------------------
# --  Link configs
# ---------------------------------------------------------------------------------------------
- link:
    # various shell configs, etc.
    ~/.shell:
      path: config/shell/*
      glob: true
    # zellij
    ~/.config/zellij:
      path: config/zellij/*
      glob: true
    # alacritty
    ~/.config/alacritty:
      path: config/alacritty/*
      glob: true
    # zellij plugins
    ~/.local/share/zellij/plugins:
      path: config/zellij/plugins/*
      glob: true
    # helix
    ~/.config/helix:
      path: config/helix/*
      glob: true
    # rbenv
    ~/.rbenv:
      path: vendor/rbenv/*
      glob: true
    # nodenv
    ~/.nodenv:
      path: vendor/nodenv/*
      glob: true
    # oh-my-zsh
    ~/.oh-my-zsh:
      path: vendor/oh-my-zsh/*
      glob: true
    # bash
    ~/.bash_profile: config/bash/bash_profile
    ~/.bashrc: config/bash/bashrc
    # zsh and stuff
    ~/.zshenv: config/zsh/zshenv
    ~/.zlogin: config/zsh/zlogin
    ~/.zlogout: config/zsh/zlogout
    ~/.zprofile: config/zsh/zprofile
    ~/.zshrc: config/zsh/zshrc
    ~/.p10k.zsh: config/zsh/p10k.zsh
    # git
    ~/.gitcommit: config/git/gitcommit
    ~/.gitconfig: config/git/gitconfig
    ~/.gitignore: config/git/gitignore
    # editorconfig
    ~/.editorconfig: config/editorconfig/default
    # bin
    #~/.local/bin/response-check: bin/response-check.sh

# ---------------------------------------------------------------------------------------------
# --  Install Software
# ---------------------------------------------------------------------------------------------
- defaults:
    shell:
      stdin: true
      stdout: true
      stderr: true

# Ensure that all installation scripts are executable
- shell:
    - description: make all installation scripts executable
      command: chmod +x bin/*

# Install base system packages via package manager
- shell:
    - description: install brew
      command: bin/install-software.sh

- shell:
    # OhMyZSH with powerlevel10k theme
    - description: install oh-my-zsh
      command: bin/install-oh-my-zsh.sh
    # Rbenv
    - description: install rbenv
      command: bin/install-rbenv.sh
    # Nodenv
    - description: install nodenv
      command: bin/install-nodenv.sh
    # Goenv
    - description: install goenv
      command: bin/install-goenv.sh
    # Zellij
    - description: install zellij
      command: bin/install-zellij.sh
    # GoTask
    - description: setup go-task
      command: bin/install-go-task.sh
    # JC2AWS
    - description: setup jc2aws
      command: bin/install-jc2aws.sh
    # TFSwitch
    - description: setup tfswitch
      command: bin/install-tfswitch.sh
    # TFSec
    - description: setup tfsec
      command: bin/install-tfsec.sh
    # TFLint
    - description: setup tflint
      command: bin/install-tflint.sh
    # Kubectl
    - description: setup kubectl
      command: bin/install-kubectl.sh
    # Kubecolor
    - description: setup kubecolor
      command: bin/install-kubecolor.sh
    # Krew (kubectl plugin manager)
    - description: setup krew
      command: bin/install-krew.sh
    # Helix (terminal editor)
    - description: setup helix-editor
      command: bin/install-helix.sh
    # Lefthook (git hooks)
    - description: setup lefthook
      command: bin/install-lefthook.sh
    # Kubectl plugins via krew
    - description: setup kubectl plugins via kubectl-krew
      command: |
        source $HOME/.shell/init
        kubectl krew install ctx
        kubectl krew install ns
      # kubectl krew install tap # uncomment if needed but only linux or intel mac
